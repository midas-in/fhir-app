"use strict";(self.webpackChunkfhircore=self.webpackChunkfhircore||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"defaultSidebar":[{"type":"link","label":"Overview","href":"/","docId":"index","unlisted":false},{"type":"link","label":"Project Information","href":"/project-information/","docId":"project-information/readme","unlisted":false},{"type":"category","label":"FEATURES","collapsible":false,"collapsed":false,"items":[{"type":"link","label":"App Features","href":"/features/app-features/","docId":"features/app-features/readme","unlisted":false},{"type":"link","label":"Admin Dashboard Features","href":"/features/admin-dashboard-features/","docId":"features/admin-dashboard-features/readme","unlisted":false},{"type":"link","label":"Supported Domains","href":"/features/supported-health-domains/","docId":"features/supported-health-domains/readme","unlisted":false},{"type":"link","label":"Design","href":"/features/design/","docId":"features/design/readme","unlisted":false}]},{"type":"category","label":"ENGINEERING","collapsible":false,"collapsed":false,"items":[{"type":"category","label":"Android App","collapsible":true,"collapsed":false,"items":[{"type":"category","label":"Developer setup","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Code Reviews","href":"/engineering/android-app/developer-setup/code-reviews","docId":"engineering/android-app/developer-setup/code-reviews","unlisted":false},{"type":"link","label":"Code Standards","href":"/engineering/android-app/developer-setup/code-standards","docId":"engineering/android-app/developer-setup/code-standards","unlisted":false},{"type":"link","label":"Publishing SDK Artifacts","href":"/engineering/android-app/developer-setup/publishing-fhir-sdk-artifacts","docId":"engineering/android-app/developer-setup/publishing-fhir-sdk-artifacts","unlisted":false},{"type":"link","label":"Sentry setup","href":"/engineering/android-app/developer-setup/sentry","docId":"engineering/android-app/developer-setup/sentry","unlisted":false},{"type":"category","label":"Testing","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Unit Tests","href":"/engineering/android-app/developer-setup/testing/unit-tests","docId":"engineering/android-app/developer-setup/testing/unit-tests","unlisted":false}],"href":"/engineering/android-app/developer-setup/testing/"}],"href":"/engineering/android-app/developer-setup/"},{"type":"link","label":"Releases","href":"/engineering/android-app/automated-releases","docId":"engineering/android-app/automated-releases","unlisted":false},{"type":"category","label":"Configuring","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"App flavors","href":"/engineering/android-app/configuring/add-application-flavors","docId":"engineering/android-app/configuring/add-application-flavors","unlisted":false},{"type":"category","label":"Config types","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Application","href":"/engineering/android-app/configuring/config-types/application","docId":"engineering/android-app/configuring/config-types/application","unlisted":false},{"type":"link","label":"Geowidget","href":"/engineering/android-app/configuring/config-types/geowidget","docId":"engineering/android-app/configuring/config-types/geowidget","unlisted":false},{"type":"link","label":"How register and profile works together with widgets.","href":"/engineering/android-app/configuring/config-types/how-register-and-profile-works","docId":"engineering/android-app/configuring/config-types/how-register-and-profile-works","unlisted":false},{"type":"link","label":"Measure reports","href":"/engineering/android-app/configuring/config-types/measure-report","docId":"engineering/android-app/configuring/config-types/measure-report","unlisted":false},{"type":"link","label":"Navigation","href":"/engineering/android-app/configuring/config-types/navigation","docId":"engineering/android-app/configuring/config-types/navigation","unlisted":false},{"type":"link","label":"Profiles","href":"/engineering/android-app/configuring/config-types/profile","docId":"engineering/android-app/configuring/config-types/profile","unlisted":false},{"type":"link","label":"Questionnaires and forms","href":"/engineering/android-app/configuring/config-types/questionnaire","docId":"engineering/android-app/configuring/config-types/questionnaire","unlisted":false},{"type":"link","label":"Registers and lists","href":"/engineering/android-app/configuring/config-types/register","docId":"engineering/android-app/configuring/config-types/register","unlisted":false},{"type":"link","label":"Syncronization","href":"/engineering/android-app/configuring/config-types/sync","docId":"engineering/android-app/configuring/config-types/sync","unlisted":false},{"type":"link","label":"Widgets","href":"/engineering/android-app/configuring/config-types/widget","docId":"engineering/android-app/configuring/config-types/widget","unlisted":false}]},{"type":"link","label":"Data migration","href":"/engineering/android-app/configuring/data-migration","docId":"engineering/android-app/configuring/data-migration","unlisted":false},{"type":"link","label":"Editing","href":"/engineering/android-app/configuring/editing","docId":"engineering/android-app/configuring/editing","unlisted":false},{"type":"category","label":"Event management","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Refresh/Invalidate cache","href":"/engineering/android-app/configuring/event-management/refresh-cache","docId":"engineering/android-app/configuring/event-management/refresh-cache","unlisted":false},{"type":"link","label":"Resource closure using background workers","href":"/engineering/android-app/configuring/event-management/resource-closure-by-background-worker","docId":"engineering/android-app/configuring/event-management/resource-closure-by-background-worker","unlisted":false},{"type":"link","label":"Resource closure using configured questionnaires","href":"/engineering/android-app/configuring/event-management/resource-closure","docId":"engineering/android-app/configuring/event-management/resource-closure","unlisted":false}]},{"type":"link","label":"In-app reporting","href":"/engineering/android-app/configuring/in-app-reporting","docId":"engineering/android-app/configuring/in-app-reporting","unlisted":false},{"type":"link","label":"Working with rules","href":"/engineering/android-app/configuring/working-with-rules","docId":"engineering/android-app/configuring/working-with-rules","unlisted":false}],"href":"/engineering/android-app/configuring/"},{"type":"category","label":"Data storage","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Tagging Resources","href":"/engineering/android-app/datastore/tagging","docId":"engineering/android-app/datastore/tagging","unlisted":false}],"href":"/engineering/android-app/datastore/"},{"type":"category","label":"System Design","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Bundling Configurations to Target Specific App Versions","href":"/engineering/android-app/system-design/configs-versioning","docId":"engineering/android-app/system-design/configs-versioning","unlisted":false}]}],"href":"/engineering/android-app/"},{"type":"category","label":"Backend","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Architecture","href":"/engineering/backend/architecture","docId":"engineering/backend/architecture","unlisted":false},{"type":"link","label":"FHIR Gateway","href":"/engineering/backend/info-gateway","docId":"engineering/backend/info-gateway","unlisted":false},{"type":"link","label":"Keycloak","href":"/engineering/backend/keycloak","docId":"engineering/backend/keycloak","unlisted":false},{"type":"link","label":"Production setup","href":"/engineering/backend/production","docId":"engineering/backend/production","unlisted":false}],"href":"/engineering/backend/"},{"type":"category","label":"Writing FHIR","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"CQL","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Converting CQL to a library","href":"/engineering/writing-fhir/cql/convert-cql-to-library","docId":"engineering/writing-fhir/cql/convert-cql-to-library","unlisted":false},{"type":"link","label":"CQL use cases","href":"/engineering/writing-fhir/cql/sample-usage","docId":"engineering/writing-fhir/cql/sample-usage","unlisted":false}],"href":"/engineering/writing-fhir/cql/"},{"type":"link","label":"FHIRPath expressions","href":"/engineering/writing-fhir/fhir_path","docId":"engineering/writing-fhir/fhir_path","unlisted":false},{"type":"link","label":"Form Authoring (Things to consider when writing forms)","href":"/engineering/writing-fhir/form-authoring","docId":"engineering/writing-fhir/form-authoring","unlisted":false},{"type":"link","label":"PlanDefinitions","href":"/engineering/writing-fhir/plan-definiton","docId":"engineering/writing-fhir/plan-definiton","unlisted":false},{"type":"link","label":"Sample FHIR resources","href":"/engineering/writing-fhir/sample-fhir-resources/","docId":"engineering/writing-fhir/sample-fhir-resources/readme","unlisted":false},{"type":"link","label":"Smart Vaccination Certificates","href":"/engineering/writing-fhir/smart-vax-certs","docId":"engineering/writing-fhir/smart-vax-certs","unlisted":false},{"type":"link","label":"Testing FHIR Resources","href":"/engineering/writing-fhir/testing-resources","docId":"engineering/writing-fhir/testing-resources","unlisted":false},{"type":"link","label":"Tooling","href":"/engineering/writing-fhir/tooling/","docId":"engineering/writing-fhir/tooling/readme","unlisted":false}],"href":"/engineering/writing-fhir/"}]}]},"docs":{"engineering/android-app/automated-releases":{"id":"engineering/android-app/automated-releases","title":"Releases","description":"OpenSRP FHIR Core releases occur at most once every 2 weeks, i.e. at the conclusion of a sprint. The release process follows the gitlab flow style described in the following diagram:","sidebar":"defaultSidebar"},"engineering/android-app/configuring/add-application-flavors":{"id":"engineering/android-app/configuring/add-application-flavors","title":"How to Add/Modify App Flavors","description":"Product Flavors Configuration","sidebar":"defaultSidebar"},"engineering/android-app/configuring/config-types/application":{"id":"engineering/android-app/configuring/config-types/application","title":"Application","description":"These are app wide configurations used to control the application behaviour globally e.g. application theme, app language etc.","sidebar":"defaultSidebar"},"engineering/android-app/configuring/config-types/geowidget":{"id":"engineering/android-app/configuring/config-types/geowidget","title":"Geowidget","description":"Configurations used to configure map view. FHIR Core uses a mapbox generated UI to position households in a map depending on the location of the household.","sidebar":"defaultSidebar"},"engineering/android-app/configuring/config-types/how-register-and-profile-works":{"id":"engineering/android-app/configuring/config-types/how-register-and-profile-works","title":"How register and profile works together with widgets.","description":"Register","sidebar":"defaultSidebar"},"engineering/android-app/configuring/config-types/measure-report":{"id":"engineering/android-app/configuring/config-types/measure-report","title":"Measure reports","description":"Any FHIRCore app can be configured to display reports. These configurations are used to configure the report indicators, which charts to use to render the reports, the interval for generating the reports etc.","sidebar":"defaultSidebar"},"engineering/android-app/configuring/config-types/navigation":{"id":"engineering/android-app/configuring/config-types/navigation","title":"Navigation","description":"These configurations are used to control how to navigate between different screens in the app. Navigation happens mostly from the side menu (aka app drawer)","sidebar":"defaultSidebar"},"engineering/android-app/configuring/config-types/profile":{"id":"engineering/android-app/configuring/config-types/profile","title":"Profiles","description":"These configurations are used to control the content of the profile screen as well as how to render the profile UI. Typically for every register in application there is a corresponding profile. Technically the same implementation is used for all profiles, however the content configured.","sidebar":"defaultSidebar"},"engineering/android-app/configuring/config-types/questionnaire":{"id":"engineering/android-app/configuring/config-types/questionnaire","title":"Questionnaires and forms","description":"This configuration is used to configure a Questionnaire. A Questionnaire is a data entry form used that is compliant to the FHIR specifications for a Questionnaire","sidebar":"defaultSidebar"},"engineering/android-app/configuring/config-types/register":{"id":"engineering/android-app/configuring/config-types/register","title":"Registers and lists","description":"Registers are the entry point to FHIRCore application. Typically this is a list used to displayed the configured FHIR resources. Clicking on a register item directs the user to the configured profile.","sidebar":"defaultSidebar"},"engineering/android-app/configuring/config-types/sync":{"id":"engineering/android-app/configuring/config-types/sync","title":"Syncronization","description":"This configuration is used to configure which resources are to be synced to and from the server. For every resource there is an optional property for indicating how the data (per resource) should be filter (search parameter).","sidebar":"defaultSidebar"},"engineering/android-app/configuring/config-types/widget":{"id":"engineering/android-app/configuring/config-types/widget","title":"Widgets","description":"Configurations used to configure widgets. FHIR Core uses widgets to render views.","sidebar":"defaultSidebar"},"engineering/android-app/configuring/data-migration":{"id":"engineering/android-app/configuring/data-migration","title":"Data migration","description":"The main functionalities of data migration are:","sidebar":"defaultSidebar"},"engineering/android-app/configuring/editing":{"id":"engineering/android-app/configuring/editing","title":"Editing","description":"You can manage edits through","sidebar":"defaultSidebar"},"engineering/android-app/configuring/event-management/refresh-cache":{"id":"engineering/android-app/configuring/event-management/refresh-cache","title":"Refresh/Invalidate cache","description":"Event management implementation provides the ability to configure when to invalidate register cache after form submission.","sidebar":"defaultSidebar"},"engineering/android-app/configuring/event-management/resource-closure":{"id":"engineering/android-app/configuring/event-management/resource-closure","title":"Resource closure using configured questionnaires","description":"Event management implementation provides the ability to configure a questionnaire so that we can state which resources to close when it is submitted.","sidebar":"defaultSidebar"},"engineering/android-app/configuring/event-management/resource-closure-by-background-worker":{"id":"engineering/android-app/configuring/event-management/resource-closure-by-background-worker","title":"Resource closure using background workers","description":"Event management implementation provides the ability to configure background workers so that we can state which resources to close when they run.","sidebar":"defaultSidebar"},"engineering/android-app/configuring/in-app-reporting":{"id":"engineering/android-app/configuring/in-app-reporting","title":"In-app reporting","description":"The in-app reporting feature empowers the health worker to see how she is performing against her daily task list, and allows for offline peer-to-peer syncing of the data collected on a daily basis. This greatly simplifies reporting requirements by eliminating the need for cumbersome paper registries and tally sheets.","sidebar":"defaultSidebar"},"engineering/android-app/configuring/readme":{"id":"engineering/android-app/configuring/readme","title":"Configurations","description":"An OpenSRP application needs configurations to work properly. These configurations are used to define application workflows (or events), user interface content, which user interface component to display and which data (FHIR Resources) to load.","sidebar":"defaultSidebar"},"engineering/android-app/configuring/working-with-rules":{"id":"engineering/android-app/configuring/working-with-rules","title":"Working with rules","description":"Rules are used to define logic and conditions for evaluating and processing healthcare data. FHIR rules can be used to validate data, create alerts and notifications based on certain conditions, or trigger workflows and other automated processes.","sidebar":"defaultSidebar"},"engineering/android-app/datastore/datastore":{"id":"engineering/android-app/datastore/datastore","title":"Storing Preferences","description":"OpenSRP2 uses the Preferences DataStore and Proto DataStore to store preferences data. Primitive types are stored in the Preferences DataStore and structured types are stored in the Proto DataStore.","sidebar":"defaultSidebar"},"engineering/android-app/datastore/tagging":{"id":"engineering/android-app/datastore/tagging","title":"Tagging Resources","description":"OpenSRP2 uses meta.tag to add additional information to resources for filtering during sycronization and analysis.","sidebar":"defaultSidebar"},"engineering/android-app/developer-setup/code-reviews":{"id":"engineering/android-app/developer-setup/code-reviews","title":"Code Reviews","description":"PRs can only be merged if all of the following requirements are met:","sidebar":"defaultSidebar"},"engineering/android-app/developer-setup/code-standards":{"id":"engineering/android-app/developer-setup/code-standards","title":"Code Standards","description":"Naming Conventions","sidebar":"defaultSidebar"},"engineering/android-app/developer-setup/publishing-fhir-sdk-artifacts":{"id":"engineering/android-app/developer-setup/publishing-fhir-sdk-artifacts","title":"Publishing FHIR SDK Library Artifacts","description":"Local Publishing","sidebar":"defaultSidebar"},"engineering/android-app/developer-setup/readme":{"id":"engineering/android-app/developer-setup/readme","title":"Developer setup","description":"Android CI with Gradle","sidebar":"defaultSidebar"},"engineering/android-app/developer-setup/sentry":{"id":"engineering/android-app/developer-setup/sentry","title":"Sentry setup","description":"### Note","sidebar":"defaultSidebar"},"engineering/android-app/developer-setup/testing/readme":{"id":"engineering/android-app/developer-setup/testing/readme","title":"Testing","description":"The OpenSRP Android app includes automated style, coverage, unit, user inteface / integartion, and performance testing. All tests are run through github actions on pull request and must be passed for a pull request to be merged without an admin override.","sidebar":"defaultSidebar"},"engineering/android-app/developer-setup/testing/unit-tests":{"id":"engineering/android-app/developer-setup/testing/unit-tests","title":"Unit Tests","description":"Naming Conventions","sidebar":"defaultSidebar"},"engineering/android-app/readme":{"id":"engineering/android-app/readme","title":"Introduction","description":"This documentation covers the OpenSRP Android App. This is a Kotlin application for delivering configurable, offline-capable, and mobile-first healthcare project implementations.","sidebar":"defaultSidebar"},"engineering/android-app/system-design/configs-versioning":{"id":"engineering/android-app/system-design/configs-versioning","title":"Bundling Configurations to Target Specific App Versions","description":"|||","sidebar":"defaultSidebar"},"engineering/backend/architecture":{"id":"engineering/backend/architecture","title":"Architecture","description":"FHIR Data Store","sidebar":"defaultSidebar"},"engineering/backend/info-gateway":{"id":"engineering/backend/info-gateway","title":"FHIR Information Gateway","description":"How it works","sidebar":"defaultSidebar"},"engineering/backend/keycloak":{"id":"engineering/backend/keycloak","title":"keycloak","description":"Keycloak user management","sidebar":"defaultSidebar"},"engineering/backend/production":{"id":"engineering/backend/production","title":"Production setup","description":"This page provides recommendations when setting up a production deployment.","sidebar":"defaultSidebar"},"engineering/backend/readme":{"id":"engineering/backend/readme","title":"readme","description":"Backend application setup","sidebar":"defaultSidebar"},"engineering/writing-fhir/cql/convert-cql-to-library":{"id":"engineering/writing-fhir/cql/convert-cql-to-library","title":"Converting CQL to a library","description":"This document discusses how to convert a CQL script to a FHIR library.","sidebar":"defaultSidebar"},"engineering/writing-fhir/cql/cql":{"id":"engineering/writing-fhir/cql/cql","title":"CQL","description":"This Documentation on CQL is to give some insights on","sidebar":"defaultSidebar"},"engineering/writing-fhir/cql/sample-usage":{"id":"engineering/writing-fhir/cql/sample-usage","title":"CQL use cases","description":"Use Case 1: G6PD Threshold management","sidebar":"defaultSidebar"},"engineering/writing-fhir/fhir_path":{"id":"engineering/writing-fhir/fhir_path","title":"FHIRPath expressions","description":"Paths are defined using FhirPath, which is an expression language defined by FHIR. In its simplest form, this can take the form of a single dotted path:","sidebar":"defaultSidebar"},"engineering/writing-fhir/form-authoring":{"id":"engineering/writing-fhir/form-authoring","title":"Form Authoring (Things to consider when writing forms)","description":"- Make sure that the enableWhen expressions are accompanied by the enableBehaviour attribute in order to avoid form crashes.","sidebar":"defaultSidebar"},"engineering/writing-fhir/plan-definiton":{"id":"engineering/writing-fhir/plan-definiton","title":"PlanDefinitions","description":"A PlanDefinition is a pre-defined group of actions to be taken in particular circumstances, often including conditional elements, options, and other decision points. The resource is flexible enough to be used to represent a variety of workflows, as well as clinical decision support and quality improvement assets, including order sets, protocols, and decision support rules.","sidebar":"defaultSidebar"},"engineering/writing-fhir/readme":{"id":"engineering/writing-fhir/readme","title":"Writing FHIR","description":"This section contains information on how to write FHIR for use in OpenSRP apps. The overall graph of FHIR resources used by the app is shown below.","sidebar":"defaultSidebar"},"engineering/writing-fhir/sample-fhir-resources/readme":{"id":"engineering/writing-fhir/sample-fhir-resources/readme","title":"Sample FHIR resources","description":"- ANC Resources","sidebar":"defaultSidebar"},"engineering/writing-fhir/smart-vax-certs":{"id":"engineering/writing-fhir/smart-vax-certs","title":"Smart Vaccination Certificates","description":"OpenSRP FHIR Core for Smart Vaccination Certificates for Android implements the Smart Certificates protocol for recording, storing, validation, and generating certificates verifying vaccination status. All the Patient data is eventually going to be mapped as an  International Patient Summary (IPS) document, i.e. as an electronic health record extract containing essential healthcare information about a subject of care. As specified in EN 17269 and ISO/DIS 27269, it is designed to support \'unplanned, cross border care\', but it is not limited to this. It is intended to be international by providing a generic solutions for global application beyond a particular region or country.","sidebar":"defaultSidebar"},"engineering/writing-fhir/testing-resources":{"id":"engineering/writing-fhir/testing-resources","title":"Testing FHIR Resources","description":"Step 1 - Creating Patient Resources","sidebar":"defaultSidebar"},"engineering/writing-fhir/tooling/readme":{"id":"engineering/writing-fhir/tooling/readme","title":"Tooling","description":"fhir-tooling simplifies FHIR data management by converting, validating, extracting, uploading, and cleaning resources.","sidebar":"defaultSidebar"},"features/admin-dashboard-features/readme":{"id":"features/admin-dashboard-features/readme","title":"Admin Dashboard Features","description":"This guide outlines the steps to follow to manage Users, Care Team, Organization and Locations on OpenSRP. The platform is named FHIR Web and interacts with the Keycloak and HAPI FHIR servers.","sidebar":"defaultSidebar"},"features/app-features/readme":{"id":"features/app-features/readme","title":"App Features","description":"As of release v1.0.1 (September 21st, 2023)","sidebar":"defaultSidebar"},"features/design/readme":{"id":"features/design/readme","title":"Design","description":"Design System and Reusable UIs","sidebar":"defaultSidebar"},"features/supported-health-domains/readme":{"id":"features/supported-health-domains/readme","title":"Supported Domains","description":"Household Registration","sidebar":"defaultSidebar"},"index":{"id":"index","title":"Overview","description":"OpenSRP is a FHIR-native medical record system for health workers to manage their patients for child health, maternal health and more. OpenSRP is developed by Ona, a Kenyan social enterprise, with contributions from organizations around the world.","sidebar":"defaultSidebar"},"project-information/readme":{"id":"project-information/readme","title":"Project Information","description":"Background","sidebar":"defaultSidebar"}}}')}}]);