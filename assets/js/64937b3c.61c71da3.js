"use strict";(self.webpackChunkfhircore=self.webpackChunkfhircore||[]).push([[2714],{5843:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>h,frontMatter:()=>t,metadata:()=>d,toc:()=>l});var o=r(5893),i=r(1151);const t={sidebar_position:2},s="Developer setup",d={id:"engineering/android-app/developer-setup/readme",title:"Developer setup",description:"Android CI with Gradle",source:"@site/docs/engineering/android-app/developer-setup/readme.mdx",sourceDirName:"engineering/android-app/developer-setup",slug:"/engineering/android-app/developer-setup/",permalink:"/engineering/android-app/developer-setup/",draft:!1,unlisted:!1,editUrl:"https://github.com/opensrp/fhircore/tree/main/docs/engineering/android-app/developer-setup/readme.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"defaultSidebar",previous:{title:"Introduction",permalink:"/engineering/android-app/"},next:{title:"Code Reviews",permalink:"/engineering/android-app/developer-setup/code-reviews"}},c={},l=[{value:"Android Studio",id:"android-studio",level:2},{value:"Kotlin style",id:"kotlin-style",level:2},{value:"Build setup",id:"build-setup",level:2},{value:"Gateway vs Non Gateway backend",id:"gateway-vs-non-gateway-backend",level:3},{value:"App release",id:"app-release",level:2},{value:"Application architecture",id:"application-architecture",level:2},{value:"Project Structure",id:"project-structure",level:2},{value:"Package structure",id:"package-structure",level:2},{value:"<code>data</code>",id:"data",level:3},{value:"<code>ui</code>",id:"ui",level:3},{value:"<code>util</code>",id:"util",level:3},{value:"Running the documentation locally",id:"running-the-documentation-locally",level:2},{value:"Resources",id:"resources",level:2}];function a(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{id:"developer-setup",children:"Developer setup"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.a,{href:"https://github.com/opensrp/fhircore/actions/workflows/ci.yml?query=branch%3Amain",children:(0,o.jsx)(n.img,{src:"https://github.com/opensrp/fhircore/actions/workflows/ci.yml/badge.svg?branch=main",alt:"Android CI with Gradle"})}),"\n",(0,o.jsx)(n.a,{href:"https://codecov.io/gh/opensrp/fhircore",children:(0,o.jsx)(n.img,{src:"https://codecov.io/gh/opensrp/fhircore/branch/main/graph/badge.svg?token=IJUTHZUGGH",alt:"codecov"})}),"\n",(0,o.jsx)(n.a,{href:"https://opensource.org/licenses/Apache-2.0",children:(0,o.jsx)(n.img,{src:"https://img.shields.io/badge/License-Apache_2.0-blue.svg",alt:"License"})}),"\n",(0,o.jsx)(n.a,{href:"https://chat.fhir.org/#narrow/stream/370552-OpenSRP",children:(0,o.jsx)(n.img,{src:"https://img.shields.io/badge/zulip-join_chat-brightgreen.svg",alt:"project chat"})})]}),"\n",(0,o.jsx)(n.h2,{id:"android-studio",children:"Android Studio"}),"\n",(0,o.jsx)(n.p,{children:"Use Android Studio 4.2+."}),"\n",(0,o.jsx)(n.h2,{id:"kotlin-style",children:"Kotlin style"}),"\n",(0,o.jsx)(n.p,{children:"If you would like Android Studio to help format your code, follow these steps to set up your Android Studio:"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["Install and configure the ",(0,o.jsx)(n.a,{href:"https://github.com/facebookincubator/ktfmt",children:"ktfmt plugin"})," in Android Studio by following these steps:","\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["Go to Android Studio's ",(0,o.jsx)(n.code,{children:"Settings"})," (or ",(0,o.jsx)(n.code,{children:"Preferences"}),"), select the ",(0,o.jsx)(n.code,{children:"Plugins"})," category, click the ",(0,o.jsx)(n.code,{children:"Marketplace"})," tab, search for the ",(0,o.jsx)(n.code,{children:"ktfmt"})," plugin, and click the ",(0,o.jsx)(n.code,{children:"Install"})," button"]}),"\n",(0,o.jsxs)(n.li,{children:["In Android Studio's ",(0,o.jsx)(n.code,{children:"Settings"})," (or ",(0,o.jsx)(n.code,{children:"Preferences"}),"), go to ",(0,o.jsx)(n.code,{children:"Editor"})," \u2192 ",(0,o.jsx)(n.code,{children:"ktfmt Settings"}),", tick ",(0,o.jsx)(n.code,{children:"Enable ktfmt"}),", change the ",(0,o.jsx)(n.code,{children:"Code style"})," to ",(0,o.jsx)(n.code,{children:"Google (Internal)"}),", and click ",(0,o.jsx)(n.code,{children:"OK"})]}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["Indent 2 spaces. In Android Studio's ",(0,o.jsx)(n.code,{children:"Settings"})," (or ",(0,o.jsx)(n.code,{children:"Preferences"}),"), go to ",(0,o.jsx)(n.code,{children:"Editor"})," \u2192 ",(0,o.jsx)(n.code,{children:"Code Style"})," \u2192 ",(0,o.jsx)(n.code,{children:"Kotlin"})," \u2192 ",(0,o.jsx)(n.code,{children:"Tabs and Indents"}),", set ",(0,o.jsx)(n.code,{children:"Tab size"}),", ",(0,o.jsx)(n.code,{children:"Indent"})," and ",(0,o.jsx)(n.code,{children:"Continuation indent"})," to ",(0,o.jsx)(n.code,{children:"2"}),", and click ",(0,o.jsx)(n.code,{children:"OK"}),"."]}),"\n",(0,o.jsxs)(n.li,{children:["Use single name import sorted lexicographically. In Android Studio's ",(0,o.jsx)(n.code,{children:"Settings"})," (or ",(0,o.jsx)(n.code,{children:"Preferences"}),"), go to ",(0,o.jsx)(n.code,{children:"Editor"})," \u2192 ",(0,o.jsx)(n.code,{children:"Code Style"})," \u2192 ",(0,o.jsx)(n.code,{children:"Kotlin"})," \u2192 ",(0,o.jsx)(n.code,{children:"Imports"}),", in ",(0,o.jsx)(n.code,{children:"Top-level Symbols"})," and ",(0,o.jsx)(n.code,{children:"Java statics and Enum Members"})," sections select ",(0,o.jsx)(n.code,{children:"Use single name import"})," option, remove all the rules in ",(0,o.jsx)(n.code,{children:"Packages to Use Imports with '*'"})," and ",(0,o.jsx)(n.code,{children:"Import Layout"})," sections and click ",(0,o.jsx)(n.code,{children:"OK"}),"."]}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["Now you can go to ",(0,o.jsx)(n.code,{children:"Code"})," \u2192 ",(0,o.jsx)(n.code,{children:"Reformat code"}),", or press ",(0,o.jsx)(n.code,{children:"Ctrl+Alt+L"})," (",(0,o.jsx)(n.code,{children:"\u2318+\u2325+L"})," for Mac) to automatically format code in Android Studio."]}),"\n",(0,o.jsx)(n.p,{children:"Note that you don't have to do any of these. You could rely on spotless to format any code you want to push. For details see below."}),"\n",(0,o.jsx)(n.h2,{id:"build-setup",children:"Build setup"}),"\n",(0,o.jsx)(n.p,{children:"Begin by cloning this repository. Ensure you have JAVA 11 installed, and setup Android studio to use the Java 11 JDK for this project."}),"\n",(0,o.jsxs)(n.p,{children:["Update ",(0,o.jsx)(n.code,{children:"local.properties"})," file by providing the required Keycloak credentials to enable syncing of data to and from the HAPI FHIR server:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:'#oauth configurations\nOAUTH_BASE_URL=https://keycloak-stage.smartregister.org/auth/realms/FHIR_Android/\nOAUTH_CLIENT_ID="provide client id"\nOAUTH_SCOPE=openid\n\n#fhir store base url\nFHIR_BASE_URL=https://fhir.labs.smartregister.org/fhir/\n\n#sentry dsn\nSENTRY_DSN=<https://your/sentry/project/dsn>\n\n#Optional: Application id for a specific build variant\nOPENSRP_APP_ID="demo"\n\n'})}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Note:"})," It is required to configure your OAuth client as ",(0,o.jsx)(n.strong,{children:"public"})," hence there's no need for a ",(0,o.jsx)(n.em,{children:"OAuth client secret"}),"."]}),"\n",(0,o.jsxs)(n.p,{children:["Create an empty ",(0,o.jsx)(n.code,{children:"keystore.properties"})," file in the path ",(0,o.jsx)(n.code,{children:"/android/keystore.properties"}),". This file is already gitignored so you can set up credentials without leaking to git."]}),"\n",(0,o.jsx)(n.h3,{id:"gateway-vs-non-gateway-backend",children:"Gateway vs Non Gateway backend"}),"\n",(0,o.jsxs)(n.p,{children:["The codebase supports building a release that uses the ",(0,o.jsx)(n.a,{href:"https://github.com/opensrp/fhir-gateway",children:"FHIR Gateway backend"})," and one that doesn't. The ",(0,o.jsx)(n.strong,{children:"proxy"})," mode is the ",(0,o.jsx)(n.em,{children:"default"})," but if your backend is not using the ",(0,o.jsx)(n.a,{href:"https://github.com/opensrp/fhir-gateway/releases",children:"FHIR Gateway"})," you need to specify this by switching to the correct build type variant. To switch between the two one needs to change to a variant with the ",(0,o.jsx)(n.code,{children:"debugNonProxy"})," build type. e.g for the flavor ",(0,o.jsx)(n.code,{children:"opensrp"})," select the variant ",(0,o.jsx)(n.code,{children:"opensrpDebugNonProxy"})]}),"\n",(0,o.jsx)(n.h2,{id:"app-release",children:"App release"}),"\n",(0,o.jsxs)(n.p,{children:["In order for the ",(0,o.jsx)(n.code,{children:"assembleRelease"})," and/or ",(0,o.jsx)(n.code,{children:"bundleRelease"})," Gradle tasks to work for instance when you need to generate a signed release version of the APK (or AAB), a keystore is required."]}),"\n",(0,o.jsxs)(n.p,{children:["Generate your own release keystore using the ",(0,o.jsx)(n.code,{children:"keytool"})," utility (installed as part of the java runtime) by running the following command:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-sh",children:"keytool -genkey -v -keystore fhircore.keystore.jks -alias <your_alias_name> -keyalg RSA -keysize 4096 -validity 1000\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Place the Keystore file in your user(home) directory i.e. ",(0,o.jsx)(n.code,{children:"/Users/username/fhircore.keystore.jks"})," for Windows or ",(0,o.jsx)(n.code,{children:"~/fhircore.keystore.jks"})," for Unix based systems."]}),"\n",(0,o.jsxs)(n.p,{children:["Next, create the following SYSTEM_VARIABLEs and set their values accordingly: ",(0,o.jsx)(n.code,{children:"KEYSTORE_ALIAS"}),", ",(0,o.jsx)(n.code,{children:"KEYSTORE_PASSWORD"}),", ",(0,o.jsx)(n.code,{children:"KEY_PASSWORD"})]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Note:"})," Assign the generated keystore values to the SYSTEM_VARIABLEs listed above. Also note, if your platform doesn't prompt you for a second password when generating the Keystore (e.g. of type PKCS12) then both the KEYSTORE_PASSWORD and KEY_PASSWORD should have the same value."]}),"\n",(0,o.jsxs)(n.p,{children:["You can alternatively store the above credentials in a file named ",(0,o.jsx)(n.code,{children:"keystore.properties"}),". Just be careful to include this file in ",(0,o.jsx)(n.code,{children:".gitignore"})," to prevent leaking secrets via git VCS."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"KEYSTORE_PASSWORD=xxxxxx\nKEYSTORE_ALIAS=xxxxxx\nKEY_PASSWORD=xxxxxx\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Lastly, you can also provide the ",(0,o.jsx)(n.code,{children:"local.properties"})," and/or the ",(0,o.jsx)(n.code,{children:"keystore.properties"})," file as a gradle property using via the property names ",(0,o.jsx)(n.code,{children:"localPropertiesFile"})," and ",(0,o.jsx)(n.code,{children:"keystorePropertiesFile"})," respectively. The value of the properties file should be its absolute file path."]}),"\n",(0,o.jsx)(n.p,{children:"For example, to build the eCHIS release from the terminal you can run the command below:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-sh",children:"./gradlew assembleEchisRelease --stacktrace -PlocalPropertiesFile=/Abolute/Path/To/echis.local.properties -PkeystorePropertiesFile=/Absolute/Path/To/echis.keystore.properties\n"})}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Note:"})," The app supports a variant mode that does not require the FHIR Gateway/Proxy to be integrated. To build the same APK as a NON-PROXY variant set the ",(0,o.jsx)(n.code,{children:"isNonProxy"})," gradle property to ",(0,o.jsx)(n.code,{children:"true"})," e.g."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-sh",children:"./gradlew assembleEchisRelease --stacktrace -PisNonProxy=true -PlocalPropertiesFile=/Abolute/Path/To/proxy.echis.local.properties -PkeystorePropertiesFile=/Absolute/Path/To/echis.keystore.properties\n"})}),"\n",(0,o.jsx)(n.p,{children:"Refer to the following links for more details:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"https://docs.oracle.com/javase/6/docs/technotes/tools/windows/keytool.html",children:"Java Key and Certificate Management Tool"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"https://developer.android.com/studio/publish/app-signing",children:"Signing Android apps"})}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"application-architecture",children:"Application architecture"}),"\n",(0,o.jsxs)(n.p,{children:["FHIR Core is based on MVVM Android application architecture. It also follows the recommended ",(0,o.jsx)(n.a,{href:"https://developer.android.com/jetpack/guide",children:"Repository Pattern"})," on its data layer. The diagram below shows the different layers of the application structure and how they interact with eachother."]}),"\n",(0,o.jsx)(n.p,{children:"At the core is Android FHIR SDK which provides Data Access API, Search API, Sync API, Smart Guidelines API and Data Capture API."}),"\n",(0,o.jsx)(n.h2,{id:"project-structure",children:"Project Structure"}),"\n",(0,o.jsxs)(n.p,{children:["The project currently consists an application module (",(0,o.jsx)(n.code,{children:"quest"}),") and two Android library modules (",(0,o.jsx)(n.code,{children:"engine"})," and ",(0,o.jsx)(n.code,{children:"geowidget"}),"). The ",(0,o.jsx)(n.code,{children:"geowidget"})," module contains implementation for intergrating Map views to FHIR Core. ",(0,o.jsx)(n.code,{children:"engine"})," module contains shared code."]}),"\n",(0,o.jsx)(n.h2,{id:"package-structure",children:"Package structure"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"quest"})," and ",(0,o.jsx)(n.code,{children:"geowidget"})," modules packages are grouped based on features. ",(0,o.jsx)(n.code,{children:"engine"})," module on the other hand uses a hybrid approach, combining both layered and feature based package structure."]}),"\n",(0,o.jsx)(n.p,{children:"At a higher level every module is at least organized into three main packages, namely:"}),"\n",(0,o.jsx)(n.h3,{id:"data",children:(0,o.jsx)(n.code,{children:"data"})}),"\n",(0,o.jsxs)(n.p,{children:["This package is used to holds classes/objects implementations for accessing data view the Android FHIR SDK APIs. The ",(0,o.jsx)(n.code,{children:"data"})," package for ",(0,o.jsx)(n.code,{children:"engine"})," module is further sub-divided into two sub-packages that is ",(0,o.jsx)(n.code,{children:"local"})," and ",(0,o.jsx)(n.code,{children:"remote"}),". ",(0,o.jsx)(n.code,{children:"local"})," directory holds the implementation for accessing the Sqlite database whereas",(0,o.jsx)(n.code,{children:"remote"})," directory contains implementation for making http requests to HAPI FHIR server backend."]}),"\n",(0,o.jsx)(n.h3,{id:"ui",children:(0,o.jsx)(n.code,{children:"ui"})}),"\n",(0,o.jsxs)(n.p,{children:["This package mostly contains Android ",(0,o.jsx)(n.code,{children:"Activity"}),", ",(0,o.jsx)(n.code,{children:"Fragment"}),", ",(0,o.jsx)(n.code,{children:"ViewModel"}),", and ",(0,o.jsx)(n.code,{children:"Composable"})," functions for rendering UI."]}),"\n",(0,o.jsx)(n.h3,{id:"util",children:(0,o.jsx)(n.code,{children:"util"})}),"\n",(0,o.jsxs)(n.p,{children:["This package is used to hold any code that shared internally typically implemented as Kotlin extensions. Other utilities use kotlin ",(0,o.jsx)(n.code,{children:"object"})," to implement singletons."]}),"\n",(0,o.jsx)(n.p,{children:"Conventionally, classes are further organized into more cohesive directories within the main packages mentioned above. This should allow minimal updates when code is refactored by moving directories."}),"\n",(0,o.jsx)(n.h2,{id:"running-the-documentation-locally",children:"Running the documentation locally"}),"\n",(0,o.jsx)(n.p,{children:"To run the documentation locally navigate to the repository root directory and run:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"npm install\nnpx docusaurus start\n"})}),"\n",(0,o.jsx)(n.h2,{id:"resources",children:"Resources"}),"\n",(0,o.jsx)(n.p,{children:"Refer to the following links for more details:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"https://developer.android.com/jetpack/guide",children:"Android App Architecture Guide"})," - Learn more about Android App Architecture"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"https://developer.android.com/jetpack/compose",children:"Jetpack Compose"})," - Learn more about Jetpack Compose"]}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"https://docs.sentry.io/product/sentry-basics/dsn-explainer/",children:"Sentry DSN"})}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(a,{...e})}):a(e)}},1151:(e,n,r)=>{r.d(n,{Z:()=>d,a:()=>s});var o=r(7294);const i={},t=o.createContext(i);function s(e){const n=o.useContext(t);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),o.createElement(t.Provider,{value:n},e.children)}}}]);